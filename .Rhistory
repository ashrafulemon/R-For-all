cc
cc= pbinom(2,n,p)- pbinom(-1,n,p)
cc
pbinom(-1,n,p)
cc= dbinom(0,n,p)+dbinom(1,n,p)+dbinom(2,n,p)
cc
mm
mm=1- pbinom(2,n,p)
mm
cc= dbinom(5,n,p)+dbinom(4,n,p)+dbinom(3,n,p)+dbinom(2,n,p)
mm
cc
mm=pbinom(1,n,p)- pbinom(5,n,p)
mm
mm=pbinom(5,n,p)- pbinom(1,n,p)
mm
mos= pbinom(2,n,p) #at most
mos
nun= dbinom(0,n,p) #none survive  #0,1,2
num
non= dbinom(0,n,p) #none survive  #0,1,2
non
p=.4
n=5
exl= dbinom(5,n,p)# exactly 5 survive
cc= dbinom(5,n,p)+dbinom(4,n,p)+dbinom(3,n,p)+dbinom(2,n,p) # atleast 2
exl
mm=pbinom(15,n,p)- pbinom(9,n,p) # atleast 10 >> p mean oi bindoo soho
mm
p=.4
n=15
exl= dbinom(5,n,p)# exactly 5 survive
mm=pbinom(15,n,p)- pbinom(9,n,p) # atleast 10 >> p mean oi bindoo soho
exl
mm=pbinom(15,n,p)- pbinom(9,n,p) # atleast 10 >> p mean oi bindoo soho
mm
mm=pbinom(8,n,p)- pbinom(2,n,p) # 3 tp 8 >> p mean oi bindoo soho
mm
x= rnorm(1000,100,225)
p= pnorm(80)
p
p= pnorm(80,100,225)
p
p= pnorm(90,100,225)-pnorm(74,100,225)
p
q= qnorm(.05)
q
q= qnorm(1)
q
q= qnorm(.1)
q
q= qnorm(.5)
q
q= qnorm(.5,100,225)
q
q= qnorm(.05,100,225)
q
q= qnorm(.15,100,225)
q
q= qnorm(.66,100,225)
q
q= qnorm(.05,100,225)
q
# Specify shape and rate parameters
alpha <- 2
beta <- 2
# Generate a sequence of x values
x <- seq(0, 20, length.out = 1000)
# Calculate the PDF values for gamma distribution
pdf_values <- dgamma(x, shape = alpha, rate = beta)
# Plot the density curve
plot(x, pdf_values, type = "l", lwd = 2, col = "blue",
main = "Density Curve for Gamma(2, 2)",
xlab = "X", ylab = "Density")
# Generate a sequence of w values
w <- seq(0, 100, by = 0.1)
# Calculate the PDF values for the given w values
pdf_values <- numeric(length(w))
pdf_values
pdf_values[w < 40] <- 0
pdf_values[w >= 40 & w < 65] <- w[w >= 40 & w < 65]^2
pdf_values
pdf_values[w >= 65] <- 1
w[w >= 40 & w < 65]
w >= 40 & w < 65
w[w >= 40 & w < 65]^2
w >= 40 & w < 65
w[w >= 40 & w < 65]
# Generate a sequence of w values
w <- seq(0, 100, by = 0.1)
# Calculate the PDF values for the given w values
pdf_values <- numeric(length(w))
pdf_values[w < 40] <- 0
pdf_values[w >= 40 & w <= 65] <- (w[w >= 40 & w <= 65]^2 - 80 * w[w >= 40 & w <= 65] + 1600) / 1250
pdf_values[w > 65 & w <= 90] <- (-w[w > 65 & w <= 90]^2 + 180 * w[w > 65 & w <= 90] + 6850) / (1250 * 100)
pdf_values[w > 90] <- 1
# Plot the PDF
plot(w, pdf_values, type = "l", lwd = 2, col = "blue",
main = "Piecewise PDF Function",
xlab = "w", ylab = "F(w)")
getwd()
setwd("I:\\final_exam")
getwd()
getwd()
builtins()
help(sqrt)
a= seq(1,10,1)
a= seq(1,10,1)
sum=0
for(i in 1:10){
sum= sum+a[i]
}
sum
ls()
rm(a)
rm(list=ls())
s= factor(state)
state=c("tas","sa","sa","aaa")
s= factor(state)
me= tapply(incomes,s,mean)
incomes=c(10,12,1,4)
me= tapply(incomes,s,mean)
me
z= array(c(1,2,3,4,5,6),dim=c(1,3,2))
z
inf= factor(cut(incomes,break=(30+10*(1:3))))
state= c("tas","sa","asds","dsj","sa")
statef= factor(state)
state
incomes=c(60,49,36,90,70)
inf= factor(cut(incomes,break=(30+10*(1:3))))
inf= factor(cut(incomes,breaks=(30+10*(1:3))))
inf= factor(cut(incomes,breaks=(30+10*(0:3))))
table(inf,statef)
a= read.csv(choose.files())
d=data(iris)
d
d=data("iris")
d
d=data()
View(d)
data()
d= iris
nrow(df1)
ncol(df1)
dim(df1)
nrow(d)
ncol(d)
dim(d)
a=10.5
print(sprintf("ok %f",a))
print(sprintf("ok %.2f",a))
min_max(c(1,4,2,6,2,8,0,10,5))
min_max= function(x){
mx=x[1]
mn=x[1]
a=1
n=1
for(i in 1:length(x)){
if(mx<x[i]){
mx=x[i]
a=i
}
if(mn>x[i]){
mn=x[i]
n=i
}
}
}
min_max(c(1,4,2,6,2,8,0,10,5))
min_max= function(x){
mx=x[1]
mn=x[1]
a=1
n=1
for(i in 1:length(x)){
if(mx<x[i]){
mx=x[i]
a=i
}
if(mn>x[i]){
mn=x[i]
n=i
}
}
return(list(max=mx,min=mn,ithm= a,ithn=n))
}
amin_max(c(1,4,2,6,2,8,0,10,5))
a=min_max(c(1,4,2,6,2,8,0,10,5))
a
n= length(x)
x= c(1,1,2,2,3,4,4,3,5,6,5,6,2,3,3,2)
cnt=0
mx=0
for(i in 1:n){
cnt=0
for(j in 1:n){
if(x[i]==x[j]){
cnt=cnt+1
}
}
if(cnt>mx){
mx=cnt
}
}
n= length(x)
for(i in 1:n){
cnt=0
for(j in 1:n){
if(x[i]==x[j]){
cnt=cnt+1
}
}
if(cnt>mx){
mx=cnt
}
}
mx
for(i in 1:n){
cnt=0
for(j in 1:n){
if(x[i]==x[j]){
cnt=cnt+1
}
}
if(cnt>mx){
mx=cnt
md=x[i]
}
}
md
md
md=0
for(i in 1:n){
cnt=0
for(j in 1:n){
if(x[i]==x[j]){
cnt=cnt+1
}
}
if(cnt>mx){
mx=cnt
md=x[i]
}
}
mx
md
x= c(1,1,2,2,3,4,4,3,5,6,5,6,2,3,3,2)
cnt=0
mx=0
n= length(x)
md=0
for(i in 1:n){
cnt=0
for(j in 1:n){
if(x[i]==x[j]){
cnt=cnt+1
}
}
if(cnt>mx){
mx=cnt
md=x[i]
}
}
mx
md
par(mfraw=(c(2,2)))
par(mfraw=c(2,2))
par(mfrow=c(2,2))
hist(rnorm(10))
hist(rnorm(1000),main="hist",xlib=x)
hist(rnorm(1000),main="hist",xlib="dd")
hist(rnorm(1000),main="hist",xlab="dd",ylab="se")
hist(rnorm(1000),main="hist",xlab="dd",ylab="se",freq=F)
hist(rnorm(100),main="hist",xlab="dd",ylab="se",freq=F)
hist(rnorm(1000),main="hist",xlab="dd",ylab="se",freq=F)
lines(density(rnorm(1000)))
lines(density(rnorm(1000)),col= "red")
plot(x,y1,main="sd",type="l",lty=1,col="red")
x=c(2,4,5,6,6,5,7,6,6,7)
y=c(4,4,5,6,5,5,4,4,5,4) #not reletion
y1= 2*x+5
y2= 2.5*x+6
y3= 3*x
plot(x,y1,main="sd",type="l",lty=1,col="red")
plot(x,y1,main="sd",type="l",lty=1,col="red")
lines(x,y2,lty=2,col="green")
legend(6,18,c("ss","mm"),fill= c("red","green"))
legend(6,18,c("ss","mm"),fill= c("red","green"),lty=c(1,2,3))
abline(10,5)
abline(10,2)
abline(v=5)
a= lm(y1~x)
abline(a)
cor(x,y1)
x=c(2,4,5,6,6,5,7,6,6,7)
y=c(4,4,5,6,5,5,4,4,5,4)
sx=0
ssx=0
ssy=0
sy=0
spxy=0
n=length(x)
for(i in 1:n){
sx= sx+x[i]
sy= sy+y[i]
ssx= ssx+x[i]^2
ssy= ssy+y[i]^2
spxy= spxy+(x[i]*y[i])
}
v= spxy- (sx*sy/n)
v2= ssx- sx^2/n
v1=sqrt(ssx- sx^2/n *ssy- sy^2/n)
v1= sqrt((ssx-(sx^2)/n)*(ssy-(sy^2)/n))
coef= v/v1
b= v/v2
cor(x,y)
b= lm(y~x)
b
b= v/v2
b
a=rchisq(20000,10) # 10 df
plot(a)
plot(density(a))
s= c("H","T")
p= c("H","T")
n=10
for(i in 1:n-1){
s=outer(s,p,paste0)
}
s=c(s)
s
n=3
for(i in 1:n-1){
s=outer(s,p,paste0)
}
s=c(s)
s
s= c("H","T")
p= c("H","T")
n=3
for(i in 1:n-1){
s=outer(s,p,paste0)
}
s=c(s)
s
s= c("H","T")
p= c("H","T")
n=3
for(i in 1:n-1){
s=outer(s,p,paste0)
}
s=c(s)
s
s= c("H","T")
p= c("H","T")
n=3
for(i in 1:(n-1)){
s=outer(s,p,paste0)
}
s=c(s)
s
s=c(s)
s
ct=0
l= length(s)
for(i in 1:l){
x=unlist(strsplit(s[i]),"")
t=0
for(j in 1:n){
if(x[i]=="H"){
t=t+1
}
}
if(t>=2){
ct=ct+1
}
}
for(i in 1:l){
x=unlist(strspilt(s[i]),"")
t=0
for(j in 1:n){
if(x[i]=="H"){
t=t+1
}
}
if(t>=2){
ct=ct+1
}
}
x=unlist(strsplit(s[i],""))
for(i in 1:l){
x=unlist(strsplit(s[i],""))
t=0
for(j in 1:n){
if(x[i]=="H"){
t=t+1
}
}
if(t>=2){
ct=ct+1
}
}
for(i in 1:l){
x=unlist(strsplit(s[i],""))
t=0
for(j in 1:n){
if(x[j]=="H"){
t=t+1
}
}
if(t>=2){
ct=ct+1
}
}
p =ct/l
p
s= c("H","T")
p= c("H","T")
n=3
for(i in 1:(n-1)){
s=outer(s,p,paste0)
}
s=c(s)
s
ct=0
l= length(s)
for(i in 1:l){
x=unlist(strsplit(s[i],""))
t=0
for(j in 1:n){
if(x[j]=="H"){
t=t+1
}
}
if(t>=2){
ct=ct+1
}
}
p =ct/l
p
# impirical
s=c("h","t")
out= "h"
ct=0
t=10
for(i in 1:t ){
x= sample(s,1)
if(x=="h"){
ct=ct+1
}
}
p=ct/t
p
s=c("h","t")
out= "h"
ct=0
t=100
for(i in 1:t ){
x= sample(s,1)
if(x=="h"){
ct=ct+1
}
}
p=ct/t
p
s=c("h","t")
out= "h"
ct=0
t=100
for(i in 1:t ){
x= sample(s,1)
if(x=="h"){
ct=ct+1
}
}
p=ct/t
p
s=c("h","t")
out= "h"
ct=0
t=100
for(i in 1:t ){
x= sample(s,1)
if(x=="h"){
ct=ct+1
}
}
p=ct/t
p
t.test(x,mu=5)
x=c(1,2,3,4,5)
t.test(x,mu=5)
v=c()
for( i in 1:10){
v=c(v,sqrt(i))
}
v
a=t.test(x,mu=5)
p = a$p.value
p
#i
Height= c(142,143,144,149,151,153,157,159,160,165,167,172,174)
Weight= c(42,42,42,45,48,49,50,52,53,58,62,65,67)
plot(Weight,Height,main="scatter plot weight on Height",xlab="Weight in kg",
ylab="Height in inch")
l=lm(Height~Weight)
abline(l)
View(l)
View(l)
Height
Weight
